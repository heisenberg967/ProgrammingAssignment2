ex1
ex2<--5:9
ex2
ad1<-1:4
ad2<-5:8
ad1
ad2
ad1+ad2
any(ad2<4)
all(ad2<22)
pet<-45:52
pet[5]
Name<-c("Lorenzo","Von","Matterhorn")
ID<-c(21,31,41)
Dept<-c("Stats","Math","Econ")
x<-data.frame(Name,ID,Dept)
x
nrow(x)
ncol(x)
dim(x)
names(x)[2]
names(x)[3]
head(x)
tail(x) #Shows the last few rows of the database
x[2]
x[3,1]
class(x["ID"])
class(x[,"ID"])
Brand <- c("BMW","Mercedes","Audi")
Class <- c("Entry-level","Mid-size","Luxury")
MSRP <- c(35000,60000,90000)
x<-data.frame(Brand,Class,MSRP)
ex1list <- list("Alpha","Kilo",21,x) #Can print input data along w/ prev. created data frames
ex1list
names(ex1list)<-c("A","K","Blackjack","Deutsch Auto")
ex1list["A"]
ex1list[["Deutsch Auto"]]$Class
length(ex1list)
one <- matrix(1:100,nrow=10)
one
uno <- matrix(51:60,nrow=2)
deux <- matrix(71:80,nrow=2)
uno
deux
dim(uno)
dim(deux)
uno * deux
uno + deux
x = rnorm(10) #from intro to stat learning
y= rnorm(10)
plot(x,y)
plot(x,y,xlab="X-axis",ylab="Y-axis",main="Data Science") #^""
pdf("Plotex1.pdf")
plot(x,y,col="blue")
dev.off()
tuna <- read.csv("brusers.csv",TRUE,",") #You could also read csv files off the internet using its link
class(tuna)
head(tuna)
tail(tuna)
#Packages: code written by someone that contains defined functions that you can use to perform various tasks
require(XML)   #loads the package
items <- readHTMLTable("http://www.w3schools.com/html/html_tables.asp",which=1)
head(items)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
Name<-c("Lorenzo","Von","Matterhorn")
ID<-c(21,31,41)
Dept<-c("Stats","Math","Econ")
x<-data.frame(Name,ID,Dept)
x
nrow(x)
ncol(x)
dim(x)
names(x)[2]
names(x)[3]
head(x)
tail(x) #Shows the last few rows of the database
x[2]
x[3,1]
class(x["ID"])
class(x[,"ID"])
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
install.packages("ggplot2")
install.packages("ggplot2")
tuna <- read.csv("brusers.csv",TRUE,",") #You could also read csv files off the internet using its link
class(tuna)
head(tuna)
tail(tuna)
#Packages: code written by someone that contains defined functions that you can use to perform various tasks
require(XML)   #loads the package
items <- readHTMLTable("http://www.w3schools.com/html/html_tables.asp",which=1)
head(items)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
rm(rodeo)
assign("rodeo",21)
rodeo
rm(rodeo)
rodeo
b<-7
a<-"Pilates"
class(a)
class(b)
nchar(a)
nchar("Rolex")
cheerios<-as.Date("2016-07-28")
puffs<-"2016-06-21"
class(cheerios)
class(puffs)
"Han SOlo"=="Darth Vader"
"Indiana"=="Indiana"
l1<-c(1,2,3,4)
l2<-c("This","is","a","vector")
l1
l2
sqrt(l1)
ex1<-1:7
ex1
ex2<--5:9
ex2
ad1<-1:4
ad2<-5:8
ad1
ad2
ad1+ad2
any(ad2<4)
all(ad2<22)
pet<-45:52
pet[5]
Name<-c("Lorenzo","Von","Matterhorn")
ID<-c(21,31,41)
Dept<-c("Stats","Math","Econ")
x<-data.frame(Name,ID,Dept)
x
nrow(x)
ncol(x)
dim(x)
names(x)[2]
names(x)[3]
head(x)
tail(x) #Shows the last few rows of the database
x[2]
x[3,1]
class(x["ID"])
class(x[,"ID"])
Brand <- c("BMW","Mercedes","Audi")
Class <- c("Entry-level","Mid-size","Luxury")
MSRP <- c(35000,60000,90000)
x<-data.frame(Brand,Class,MSRP)
ex1list <- list("Alpha","Kilo",21,x) #Can print input data along w/ prev. created data frames
ex1list
names(ex1list)<-c("A","K","Blackjack","Deutsch Auto")
ex1list["A"]
ex1list[["Deutsch Auto"]]$Class
length(ex1list)
one <- matrix(1:100,nrow=10)
one
uno <- matrix(51:60,nrow=2)
deux <- matrix(71:80,nrow=2)
uno
deux
dim(uno)
dim(deux)
uno * deux
uno + deux
x = rnorm(10) #from intro to stat learning
y= rnorm(10)
plot(x,y)
plot(x,y,xlab="X-axis",ylab="Y-axis",main="Data Science") #^""
pdf("Plotex1.pdf")
plot(x,y,col="blue")
dev.off()
x = rnorm(10) #from intro to stat learning
y= rnorm(10)
plot(x,y)
plot(x,y,xlab="X-axis",ylab="Y-axis",main="Data Science") #^""
pdf("Plotex1.pdf")
plot(x,y,col="blue")
dev.off()
tuna <- read.csv("brusers.csv",TRUE,",") #You could also read csv files off the internet using its link
class(tuna)
head(tuna)
tail(tuna)
require(XML)   #loads the package
items <- readHTMLTable("http://www.w3schools.com/html/html_tables.asp",which=1)
head(items)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
2+2
2*22
y=4
y
assign("rodeo",21)
rodeo
rm(rodeo)
rodeo
assign("rodeo",21)
rodeo
rm(rodeo)
rodeo
b<-7
a<-"Pilates"
class(a)
class(b)
is.numeric(a)
is.character(b)
nchar(a)
nchar("Rolex")
cheerios<-as.Date("2016-07-28")
puffs<-"2016-06-21"
class(cheerios)
class(puffs)
5==5
5!=5
7<7
7<=7
"Han SOlo"=="Darth Vader"
"Indiana"=="Indiana"
l1<-c(1,2,3,4)
l2<-c("This","is","a","vector")
l1
l2
sqrt(l1)
ex1<-1:7
ex1
ex2<--5:9
ex2
ad1<-1:4
ad2<-5:8
ad1
ad2
ad1+ad2
any(ad2<4)
all(ad2<22)
pet<-45:52
pet[5]
Name<-c("Lorenzo","Von","Matterhorn")
ID<-c(21,31,41)
Dept<-c("Stats","Math","Econ")
x<-data.frame(Name,ID,Dept)
x
nrow(x)
ncol(x)
dim(x)
names(x)[2]
names(x)[3]
head(x)
tail(x) #Shows the last few rows of the database
x[2]
x[3,1]
class(x["ID"])
class(x[,"ID"])
Brand <- c("BMW","Mercedes","Audi")
Class <- c("Entry-level","Mid-size","Luxury")
MSRP <- c(35000,60000,90000)
x<-data.frame(Brand,Class,MSRP)
ex1list <- list("Alpha","Kilo",21,x) #Can print input data along w/ prev. created data frames
ex1list
names(ex1list)<-c("A","K","Blackjack","Deutsch Auto")
ex1list["A"]
ex1list[["Deutsch Auto"]]$Class
length(ex1list)
one <- matrix(1:100,nrow=10)
one
uno <- matrix(51:60,nrow=2)
deux <- matrix(71:80,nrow=2)
uno
deux
dim(uno)
dim(deux)
uno * deux
uno + deux
x = rnorm(10) #from intro to stat learning
y= rnorm(10)
plot(x,y)
plot(x,y,xlab="X-axis",ylab="Y-axis",main="Data Science") #^""
pdf("Plotex1.pdf")
plot(x,y,col="blue")
dev.off()
tuna <- read.csv("brusers.csv",TRUE,",") #You could also read csv files off the internet using its link
class(tuna)
head(tuna)
tail(tuna)
#Packages: code written by someone that contains defined functions that you can use to perform various tasks
require(XML)   #loads the package
items <- readHTMLTable("http://www.w3schools.com/html/html_tables.asp",which=1)
head(items)
bdata <- read.csv("brusers.csv",TRUE,",")
head(bdata)
hist(bdata$age,main="ages of users",xlab="ages",ylab="users")
#scatterplot: used to find corelation b/w two objects/variables
plot(bdata$age,bdata$income)
plot(bdata$age,bdata$income,main="age vs income comparison",xlab="age",ylab="income")
boxplot(bdata$age)
#the top and bottom lines of the boxplot represent the upper and lower limit
#the dark line rep. the median and the one above and below it, the top and bottom quartiles
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
library(ggplot2)
head(diamonds)
qplot(diamonds$carat,diamonds$price,color=diamonds$clarity)
?contour
x=seq (1 ,10)
x
[1] 1 2 3 4 5 6 7 8 9 10
x =1:10
x
[1] 1 2 3 4 5 6 7 8 9 10
x=seq (-pi ,pi , length =50)
x=seq (1 ,10)
x=seq (-pi ,pi , length =50)
y=x
f= outer (x,y, function (x,y)cos (y) /(1+x^2) )
contour (x,y,f)
contour (x,y,f, nlevels =45, add =T)
fa =(f-t(f))/2
contour (x,y,fa , nlevels =15)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=45)
persp(x,y,fa,theta=90
persp(x,y,fa,theta=90)
persp(x,y,fa,theta=120)
persp(x,y,fa,theta=120,phi=45)
persp(x,y,fa,theta=180,phi=90)
persp(x,y,fa,theta=180,phi=40)
Auto=read.Data("Auto.data")
fix(Auto)
Auto=read.table("Auto.data")
fix(Auto)
ls
Name<-c("Lorenzo","Von","Matterhorn")
ID<-c(21,31,41)
Dept<-c("Stats","Math","Econ")
x<-data.frame(Name,ID,Dept)
x
nrow(x)
ncol(x)
dim(x)
names(x)[2]
names(x)[3]
head(x)
tail(x) #Shows the last few rows of the database
x[2]
x[3,1]
class(x["ID"])
class(x[,"ID"])
Auto=read.table("Auto.txt")
fix(Auto)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
load.packages(KernSmooth)
loaded_packages(KernSmooth)
library(KernSmooth)
add2(3,5)
add2<- function(x, y){
x + y
}
return (x + y)
add2(3,4)
return (x)
above10(3)
above10<- function(x){
if(x>10)
{
return (x)
}
}
above10(23)
add2(4,6)
col(24)
col([1 2 3])
col(1 2 3)
col("1" "2")
col(airw)
aor = [1 2 4 5 5 6]
aor = 1:15
col(aor)
col(airquality)
col(airquality)
file_list = list.files(path=directory, pattern="*.csv")
install.packages("slidify")
install.packages("ggplot2")
install.packages("devtools")
library(datasets)
data("iris")
data(iris)
?iris
iris
x=subset(iris,Species=virginica)
mean(x$Sepal.Length)
whole(mean(x$Sepal.Length))
round(mean(x$Sepal.Length))
data("mtcars")
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyl),mean)
setwd("~/GitHub/ProgrammingAssignment2")
getinv <- function() a ##gets inverse val at called location
makeCacheMatrix([1 1;2 2])
x=[1 1;2 2]
x=[1 2 3,4 5 6]
x=matrix(1:4)
x
x=matrix(1:9)
x
x=matrix(2:2)
x
x=matrix(3:3)
x
x=matrix(3 3 3:3 3 3)
